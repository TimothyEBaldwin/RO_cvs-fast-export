= cvsconvert(1) =
:doctype: manpage

== NAME ==
cvsconvert - perform a Git conversion and test against the CVS original

== SYNOPSIS ==
*cvsconvert* [-v] [-k expandspec] [repo | repo/module]

== DESCRIPTION ==
cvsconvert performs a conversion of a CVS repository to Git and
checks the tree contents at all branch tips and tags to verify that
the histories are the same.

(An exception: synthetic gitspace branches enamed *-UNNAMED-BRANCH
created to collect homeless CVS commits are not checked. You will
see a warning when one of these is skipped.)

The single argument must be a path to a directory containing a a CVS
repository or module. If it is a CVS top-level directory and there is 
only one module beneath the module need not be specified. 

The Git conversion is left in a directory named after the repo
argument, with a suffix of "-git".

Normal behavior is for the program to report on each branch and tag,
saying "trees match as expected". There are two kinds of problem report:

*"file manifests don't match"*: Indicates that the CVS and Git
versions of this revision in the history contain some filenames that
don't pair up with each other. (Git and CVS ignore-pattern files are
ignored and will not trigger this message.)  When this message occurs,
files in common are still checked for equality

*"%s and %s are different"*: Two corresponding CVS and Git files do 
not compare equal. A diff listing will follow.

== Troubleshooting ==

A file difference message on any branch (but especially the master
branch) is bad news and indicates either a severe repository
malformation or a bug in cvs-fast-export (or possibly both). Any
such situation should be reported as a bug.

Manifest mismatches on branches or tags are most likely to occur on
files which were deleted in CVS but persist under later tags in the
Git conversion.  This happends because CVS does not always retain
enough information to track deletions reliably and is somewhat flaky
in its handling of "dead"-state revisions. You may need to add 
delete fileops to the conversion using reposurgeon(1) to make
your CVS and git repos match perfectly.

Manifest mismatches in the other direction (present in CVS, absent
in gitspace) should never occur.  If one does, submit a bug report.

File differences or manifest mismatches on tags are less serious.
They usually mean not the the history has been corrupted but rather
that the repository was slightly malformed in a way that led 
cvs-fast-export to place a gitspace tag wrongly.  You may be able to
fix this with reposurgeon(1) by looking at gitspace commits near the
tag and comparing dates with the CVS repository to decide where
it actually belongs.

Conversion bugs are disproportionately likely to occur on older,
branches or tags from before CVS had reliable commitids. Often the
most efficient remedy is simply to delete junk branches and tags;
reposurgeon(1) makes this easy to do.  

If you need to file a bug, please visit the project website to learn
about the bug-reporting procedure. There are specific things you can
do when preparing the report to make a rapid resolution of the problem
more likely.

== WARNING ==
This program is in early development.  Its interface and features
may change without warning.

== OPTIONS ==
-k::
    Pass a keyword-expansion specification to cvs-fast-export(1).

-v::
    Verbose.  Show subcommands as they are being executed.

== LIMITATIONS ==
This program does not cope gracefully if CVS tagnames that are not
legal for Git had to be sanitized during conversion.

Because of the way this program works around CVS's requirement for a
CVSROOT directory, it will require directory write permission on the
repository directory in that case - otherwise it will abort after a
CVS message "failed to obtain dir lock in repository". The repository
contents are not modified.

== REPORTING BUGS ==
Report bugs to Eric S. Raymond <esr@thyrsus.com>.  The project page is
at http://catb.org/~esr/cvs-fast-export

== SEE ALSO ==
rsync(1), rcs(1), cvs(1), cvs-fast-export(1), reposurgeon(1).
